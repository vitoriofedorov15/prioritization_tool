import tkinter as tk
from tkinter import filedialog, messagebox, ttk
from prioritization_tool.logic.MoSCoW import parser, moscow, moscow_report
from prioritization_tool.logic.Kano import kano, kano_report
import os



class PrioritizationTool:
    def __init__(self, root):
        self.root = root
        self.root.title("–°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
        self.root.geometry("1000x720")
        self.root.resizable(False, False)

        self.requirements_path = None
        self.weights_path = None
        self.kano_csv_path = None
        self.topsis_file_path = None
        self.fuzzy_type1_path = None
        self.topsis_intuitionistic_path = None
        self.fuzzy_delphi_type2_path = None
        self.delphi_intuitionistic_path = None
        self.ahp_type1_criteria_path = None
        self.ahp_type1_alternatives_path = None
        self.ahp_type1_weights_path = None
        self.ahp_type2_path  = None

        self.setup_style()
        self.show_method_selection_screen()

    def clear_window(self):
        for widget in self.root.winfo_children():
            widget.destroy()

    def setup_style(self):
        style = ttk.Style()
        style.theme_use("clam")

        style.configure("TButton",
                        font=("Segoe UI", 13, "bold"),
                        padding=12,
                        foreground="#ffffff",
                        background="#2980b9")

        style.map("TButton",
                  foreground=[('active', '#ffffff')],
                  background=[('active', '#1abc9c')])

        style.configure("Header.TLabel",
                        font=("Segoe UI", 26, "bold"),
                        foreground="#2c3e50")
        style.configure("Exit.TButton",
                        font=("Segoe UI", 12, "bold"),
                        padding=10,
                        foreground="#ffffff",
                        background="#c0392b")

        style.map("Exit.TButton",
                  background=[('active', '#e74c3c')])

        style.configure("Info.TLabel",
                        font=("Segoe UI", 12),
                        foreground="#2f3640",
                        wraplength=800,
                        justify="center")

        style.configure("Status.TLabel",
                        font=("Segoe UI", 12),
                        foreground="#27ae60")

    def setup_style(self):
        style = ttk.Style()
        style.theme_use("clam")

        style.configure("TButton",
                        font=("Segoe UI", 13, "bold"),
                        padding=12,
                        foreground="#ffffff",
                        background="#2980b9")

        style.map("TButton",
                  foreground=[('active', '#ffffff')],
                  background=[('active', '#1abc9c')])

        style.configure("Header.TLabel",
                        font=("Segoe UI", 26, "bold"),
                        foreground="#2c3e50")

        style.configure("Info.TLabel",
                        font=("Segoe UI", 12),
                        foreground="#2f3640",
                        wraplength=800,
                        justify="center")

        style.configure("Status.TLabel",
                        font=("Segoe UI", 12),
                        foreground="#27ae60")

        # –û—Ç–¥–µ–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
        style.configure("Exit.TButton",
                        font=("Segoe UI", 10, "bold"),
                        padding=6,
                        foreground="#ffffff",
                        background="#7f8c8d")

        style.map("Exit.TButton",
                  background=[('active', '#95a5a6')])

    def show_method_selection_screen(self):
        self.clear_window()

        frame = ttk.Frame(self.root, padding=40)
        frame.pack(fill="both", expand=True)

        ttk.Label(
            frame,
            text="–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π",
            style="Header.TLabel"
        ).pack(pady=(0, 30))

        description = (
            "–î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π "
            "–≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è. –û–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∏–µ "
            "—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Å—Ç–æ–∏—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å, –∞ –∫–∞–∫–∏–µ –º–æ–∂–Ω–æ –æ—Ç–ª–æ–∂–∏—Ç—å.\n\n"
            "–í —Å–∏—Å—Ç–µ–º–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã 6 –º–µ—Ç–æ–¥–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:\n"
            "‚Ä¢ MoSCoW ‚Äî –±—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –ö–∞–Ω–æ ‚Äî —É—á–µ—Ç –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            "‚Ä¢ TOPSIS ‚Äî –º–µ—Ç–æ–¥ –±–ª–∏–∂–∞–π—à–µ–≥–æ –∏–¥–µ–∞–ª–∞\n"
            "‚Ä¢ Fuzzy TOPSIS ‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å –Ω–µ—á—ë—Ç–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n"
            "‚Ä¢ Fuzzy Delphi ‚Äî –∫–æ–Ω—Å–µ–Ω—Å—É—Å–Ω–∞—è —ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞\n"
            "‚Ä¢ Fuzzy AHP ‚Äî –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–µ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–µ—á—ë—Ç–∫–æ—Å—Ç—å—é\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–µ—Ç–æ–¥ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:"
        )

        ttk.Label(frame, text=description, style="Info.TLabel").pack(pady=(0, 40))

        # –§—Ä–µ–π–º —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤
        methods_frame = ttk.Frame(frame)
        methods_frame.pack()

        buttons = [
            ("üìä –ú–µ—Ç–æ–¥ MoSCoW", self.show_moscow_screen),
            ("üìà –ú–µ—Ç–æ–¥ –ö–∞–Ω–æ", self.show_kano_screen),
            ("üìê –ú–µ—Ç–æ–¥ TOPSIS", self.show_topsis_screen),
            ("üå´Ô∏è Fuzzy TOPSIS", self.show_fuzzy_topsis_screen),
            ("‚öôÔ∏è Fuzzy Delphi", self.show_fuzzy_delphi_screen),
            ("üìë Fuzzy AHP", self.show_fuzzy_ahp_screen)
        ]

        for i, (text, command) in enumerate(buttons):
            btn = ttk.Button(methods_frame, text=text, command=command)
            btn.grid(row=i // 2, column=i % 2, padx=20, pady=12, ipadx=10, ipady=6, sticky="ew")
            methods_frame.columnconfigure(i % 2, weight=1)

        # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥"
        exit_frame = ttk.Frame(frame)
        exit_frame.pack(anchor="se", pady=(30, 0))  # –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –ø—Ä–∞–≤–æ–º—É –Ω–∏–∂–Ω–µ–º—É –∫—Ä–∞—é

        exit_btn = ttk.Button(exit_frame,
                              text="‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É",
                              command=self.root.quit,
                              style="Exit.TButton")
        exit_btn.pack(side="right", padx=10, pady=10)

    def show_moscow_screen(self):
        self.clear_window()
        frame = ttk.Frame(self.root, padding=20)
        frame.pack(fill="both", expand=True)

        ttk.Label(frame, text="MoSCoW Prioritization", style="Header.TLabel").pack(pady=(0, 10))

        description = (
            "–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 4 —Å—Ç–æ–ª–±—Ü–∞:\n"
            "  - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞\n"
            "  - –ö—Ä–∏—Ç–µ—Ä–∏–π\n"
            "  - –°—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä\n"
            "  - –û—Ü–µ–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"100% M\" –∏–ª–∏ \"60% S, 40% C\")\n\n"
            "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ - –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –∑–∞–ø—è—Ç–∞—è.\n"
            "–ó–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–æ –≤ –∫–∞–≤—ã—á–∫–∏, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –∑–∞–ø—è—Ç–∞—è.\n"
            "–†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–∞–∫–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –æ—Ü–µ–Ω–æ–∫: M/S, S/C, C/W.\n\n"
            "–§–∞–π–ª –≤–µ—Å–æ–≤ (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã \"–°—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä\" –∏ \"–í–µ—Å\" :\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä \"S1\",\"1.5\""
        )

        msg = tk.Message(frame, text=description, width=800, font=("Segoe UI", 10), justify="left")
        msg.pack(pady=(0, 15))

        ttk.Button(frame, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π", command=self.load_requirements).pack(pady=4)
        ttk.Button(frame, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –≤–µ—Å–æ–≤ —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–æ–≤", command=self.load_weights).pack(pady=4)
        ttk.Button(frame, text="‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—é (MoSCoW)", command=self.run_moscow).pack(pady=12)

        ttk.Button(frame, text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", command=self.show_method_selection_screen).pack(pady=10)

        self.status = ttk.Label(frame, text="", style="Status.TLabel")
        self.status.pack()

    def show_kano_screen(self):
        self.clear_window()
        frame = ttk.Frame(self.root, padding=20)
        frame.pack(fill="both", expand=True)

        ttk.Label(frame, text="Kano Model Prioritization", style="Header.TLabel").pack(pady=(0, 10))

        description = (
            "–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 5 —Å—Ç–æ–ª–±—Ü–æ–≤:\n"
            "  - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞\n"
            "  - –°—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä\n"
            "  - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"Must-be\", \"Attractive\")\n"
            "  - –î–∏—Å—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"Indifferent\", \"Reverse\")\n"
            "  - –í–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"1.0\", \"1.5\")\n\n"
            "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
            "–ó–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–æ –≤ –∫–∞–≤—ã—á–∫–∏, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
            "–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤: Must-be, One-dimensional, Attractive, Indifferent, Reverse, Questionable.\n\n"
        )

        msg = tk.Message(frame, text=description, width=800, font=("Segoe UI", 10), justify="left")
        msg.pack(pady=(0, 15))

        ttk.Button(frame, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª –¥–ª—è –ö–∞–Ω–æ", command=self.load_kano_file).pack(pady=5)
        ttk.Button(frame, text="‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—é (–ö–∞–Ω–æ)", command=self.run_kano).pack(pady=12)
        ttk.Button(frame, text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", command=self.show_method_selection_screen).pack(pady=10)

        self.status = ttk.Label(frame, text="", style="Status.TLabel")
        self.status.pack()

    def load_kano_file(self):
        path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ CSV-—Ñ–∞–π–ª —Å –∞–Ω–∫–µ—Ç–æ–π –ö–∞–Ω–æ", filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.kano_csv_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –¥–ª—è –º–æ–¥–µ–ª–∏ –ö–∞–Ω–æ")

    def run_kano(self):
        if not self.kano_csv_path:
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª –ø–µ—Ä–µ–¥ —Ä–∞—Å—á–µ—Ç–æ–º.")
            return

        try:
            results = kano.process_kano_csv(self.kano_csv_path)
            kano_report.generate_kano_report(results, filename="output/kano_report.pdf")
            self.status.config(text="üìÑ –†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ output/kano_report.pdf")
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", str(e))

    def show_topsis_screen(self):
        self.clear_window()
        frame = ttk.Frame(self.root, padding=20)
        frame.pack(fill="both", expand=True)

        ttk.Label(frame, text="TOPSIS Prioritization", style="Header.TLabel").pack(pady=(0, 10))

        description = (
            "–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–∏—Å–ª–µ–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –≤–µ—Å —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–∞:\n"
            "  - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ—Ü—Å–µ—Ç–∏\")\n"
            "  - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"7\")\n"
            "  - –£–¥–æ–±—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"8\")\n"
            "  - –ë–∏–∑–Ω–µ—Å-—Ü–µ–Ω–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"6\")\n"
            "  - –í–µ—Å —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"0.3\")\n\n"
            "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
            "–ó–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–æ –≤ –∫–∞–≤—ã—á–∫–∏, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
            "–í—Å–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –µ–¥–∏–Ω–æ–π —à–∫–∞–ª–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 1 –¥–æ 10).\n\n"
        )

        msg = tk.Message(frame, text=description, width=800, font=("Segoe UI", 10), justify="left")
        msg.pack(pady=(0, 15))

        ttk.Button(frame, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª (–≤–∫–ª—é—á–∞—è –≤–µ—Å–∞ —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–æ–≤)", command=self.load_topsis_file).pack(
            pady=5)
        ttk.Button(frame, text="‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—é (TOPSIS)", command=self.run_topsis).pack(pady=12)
        ttk.Button(frame, text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", command=self.show_method_selection_screen).pack(pady=10)

        self.status = ttk.Label(frame, text="", style="Status.TLabel")
        self.status.pack()

    def load_topsis_file(self):
        path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ CSV-—Ñ–∞–π–ª –¥–ª—è TOPSIS", filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.topsis_file_path = path
            self.status.config(text="‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: " + os.path.basename(path))

    def load_requirements(self):
        path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ CSV —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏", filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.requirements_path = path
            self.status.config(text="‚úÖ –§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω.")

    def load_weights(self):
        path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ CSV —Å –≤–µ—Å–∞–º–∏", filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.weights_path = path
            self.status.config(text="‚úÖ –í–µ—Å—ã —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

    def run_moscow(self):
        if not self.requirements_path or not self.weights_path:
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–∞ CSV-—Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ —Ä–∞—Å—á–µ—Ç–æ–º.")
            return

        try:
            req_data = parser.load_requirements(self.requirements_path)
            weights = parser.load_weights(self.weights_path)
            results = moscow.calculate(req_data, weights)
            moscow_report.generate_pdf(results, filename="output/moscow_report.pdf")
            self.status.config(text="üìÑ –†–∞—Å—á—ë—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ output/moscow_report.pdf")
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", str(e))

    def run_topsis(self):
        if not self.topsis_file_path:
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª.")
            return

        try:
            from prioritization_tool.logic.TOPSIS import topsis_report
            from prioritization_tool.logic.TOPSIS import topsis
            results = topsis.process_topsis(self.topsis_file_path)
            topsis_report.generate_topsis_report(results)
            self.status.config(text="üìÑ –û—Ç—á–µ—Ç TOPSIS —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ output/topsis_report.pdf")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))

    def show_fuzzy_topsis_screen(self):
        self.clear_window()
        frame = ttk.Frame(self.root, padding=20)
        frame.pack(fill="both", expand=True)

        ttk.Label(frame, text="–ù–µ—á–µ—Ç–∫–∞—è –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (Fuzzy TOPSIS)", style="Header.TLabel").pack(
            pady=(0, 10))

        container = ttk.Frame(frame)
        container.pack(fill="both", expand=True)

        # –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî Fuzzy TOPSIS Type-1
        left = ttk.Frame(container, padding=10)
        left.pack(side="left", fill="both", expand=True)

        ttk.Label(left, text="Fuzzy TOPSIS Type-1 (—Ç—Ä–∞–ø–µ—Ü–∏–µ–≤–∏–¥–Ω—ã–µ —á–∏—Å–ª–∞)", style="SubHeader.TLabel").pack(pady=(0, 5))

        msg1 = tk.Message(
            left,
            text=(
                "–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:\n"
                "  - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ—Ü—Å–µ—Ç–∏\")\n"
                "  - –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —Å –æ—Ü–µ–Ω–∫–∞–º–∏ –∏–∑ —à–∫–∞–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–í—ã—Å–æ–∫–æ\", \"–°—Ä–µ–¥–Ω–µ\")\n\n"
                "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
                "–í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –∫–∞–≤—ã—á–∫–∏.\n"
                "–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π —à–∫–∞–ª–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–û—á–µ–Ω—å –Ω–∏–∑–∫–æ\", \"–ù–∏–∑–∫–æ\", \"–°—Ä–µ–¥–Ω–µ\", \"–í—ã—Å–æ–∫–æ\", \"–û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ\")\n\n"
                "–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏:\n"
                "  \"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ—Ü—Å–µ—Ç–∏\",\"–í—ã—Å–æ–∫–æ\",\"–°—Ä–µ–¥–Ω–µ\",\"–ù–∏–∑–∫–æ\"\n"
                "  \"–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è\",\"–û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ\",\"–í—ã—Å–æ–∫–æ\",\"–°—Ä–µ–¥–Ω–µ\"\n\n"
                "–î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —à–∫–∞–ª—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ü–µ–Ω–æ–∫ —Ç—Ä–∞–ø–µ—Ü–∏–µ–≤–∏–¥–Ω—ã–º —á–∏—Å–ª–∞–º"
            ),
            width=380,
            font=("Segoe UI", 8),
            justify="left"
        )

        msg1.pack(pady=(0, 5))
        msg_scale = tk.Message(
            left,
            text=(
                "–§–∞–π–ª —à–∫–∞–ª—ã (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏ –∏ —Ç—Ä–∞–ø–µ—Ü–∏–µ–≤–∏–¥–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏:\n"
               "–ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞:\n"
                "\"–û—á–µ–Ω—å –Ω–∏–∑–∫–æ\",\"(1,1,2,3)\"\n"
                "\"–ù–∏–∑–∫–æ\",\"(2,3,4,5)\"\n"
                "\"–°—Ä–µ–¥–Ω–µ\",\"(4,5,6,7)\"\n"
                "..."
            ),
            width=380,
            font=("Segoe UI", 8),
            justify="left"
        )
        msg_scale.pack(pady=(0, 5))
        ttk.Button(left, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª Type-1", command=self.load_fuzzy_type1_file).pack(pady=5)

        # –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî Intuitionistic TOPSIS
        right = ttk.Frame(container, padding=10)
        right.pack(side="left", fill="both", expand=True)

        ttk.Label(right, text="Intuitionistic Fuzzy TOPSIS", style="SubHeader.TLabel").pack(pady=(0, 5))

        msg2 = tk.Message(
            right,
            text=(
                "–§–û–†–ú–ê–¢ –í–•–û–î–ù–û–ì–û –§–ê–ô–õ–ê –î–õ–Ø INTUITIONISTIC FUZZY TOPSIS (CSV)\n\n"
                "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n"
                "‚Ä¢ –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö\n"
                "‚Ä¢ –ü–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü - \"–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞\" (–Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π)\n"
                "‚Ä¢ –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã - –∫—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏\n"
                "‚Ä¢ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è - —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –≤ –∫–∞–≤—ã—á–∫–∞—Ö; "
                "‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –∑–∞–ø—è—Ç–∞—è\n\n"
                "–î–û–ü–£–°–¢–ò–ú–´–ï –¢–ï–ö–°–¢–û–í–´–ï –û–¶–ï–ù–ö–ò: "
                "‚Ä¢ –û—á–µ–Ω—å –≤–∞–∂–Ω–æ, –∏ —è —É–≤–µ—Ä–µ–Ω(a) "
                "‚Ä¢ –û—á–µ–Ω—å –≤–∞–∂–Ω–æ, –Ω–æ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è "
                "‚Ä¢ –í–∞–∂–Ω–æ, –∏ —è —É–≤–µ—Ä–µ–Ω(a) "
                "‚Ä¢ –í–∞–∂–Ω–æ, –Ω–æ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è "
                "‚Ä¢ –°—Ä–µ–¥–Ω–µ, –Ω–æ —è —É–≤–µ—Ä–µ–Ω(a) "
                "‚Ä¢ –°—Ä–µ–¥–Ω–µ, –∏ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è "
                "‚Ä¢ –ú–∞–ª–æ–≤–∞–∂–Ω–æ, –Ω–æ —è —É–≤–µ—Ä–µ–Ω(a) "
                "‚Ä¢ –ú–∞–ª–æ–≤–∞–∂–Ω–æ, –∏ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è "
                "‚Ä¢ –ù–µ–≤–∞–∂–Ω–æ, –Ω–æ —è —É–≤–µ—Ä–µ–Ω(a) "
                "‚Ä¢ –ù–µ–≤–∞–∂–Ω–æ, –∏ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è "
                "–ü–†–ò–ú–ï–† –§–ê–ô–õ–ê:\n"
                "\"–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞\",\"–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\",\"–£–¥–æ–±—Å—Ç–≤–æ\"\n"
                "\"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\",\"–í–∞–∂–Ω–æ, –∏ —è —É–≤–µ—Ä–µ–Ω(a)\",\"–°—Ä–µ–¥–Ω–µ, –Ω–æ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è\"\n"
                "\"–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ\",\"–û—á–µ–Ω—å –≤–∞–∂–Ω–æ, –Ω–æ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è\",\"–ú–∞–ª–æ–≤–∞–∂–Ω–æ, –∏ —è —É–≤–µ—Ä–µ–Ω(a)\""
            ),
            width=380,
            font=("Segoe UI", 8),
            justify="left"
        )

        msg2.pack(pady=(0, 5))
        msg_ifs_scale = tk.Message(
            right,
            text=(
                "–§–û–†–ú–ê–¢ –§–ê–ô–õ–ê –®–ö–ê–õ–´ –î–õ–Ø INTUITIONISTIC FUZZY TOPSIS (CSV):\n\n"
                "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã (—Ç–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π):\n"
                "1. \"–û—Ü–µ–Ω–∫–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞\" - —Ç–µ–∫—Å—Ç–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞\n"
                "2. \"–°—Ç–µ–ø–µ–Ω—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏\" - —á–∏—Å–ª–æ 0.0-1.0\n"
                "3. \"–°—Ç–µ–ø–µ–Ω—å –Ω–µ–ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏\" - —á–∏—Å–ª–æ 0.0-1.0\n"
                "4. \"–°—Ç–µ–ø–µ–Ω—å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏\" - —á–∏—Å–ª–æ 0.0-1.0\n\n"
                "–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤—ã—à–µ –≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º –ø–æ—Ä—è–¥–∫–µ"
                "–¢–†–ï–ë–û–í–ê–ù–ò–Ø:\n"
                "1. –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö "
                "2. –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –∑–∞–ø—è—Ç–∞—è "
                "3. –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ "
                "4. –°—É–º–º–∞ (Œº + ŒΩ + œÄ) ‚â§ 1.0 –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏\n"
                "–ü–†–ò–ú–ï–† –°–û–î–ï–†–ñ–ò–ú–û–ì–û –§–ê–ô–õ–ê –®–ö–ê–õ–´:\n"
                "\"–û—Ü–µ–Ω–∫–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞\",\"–°—Ç–µ–ø.–ø—Ä–∏–Ω–∞–¥–ª–µ–∂.\",\"–°—Ç–µ–ø.–Ω–µ–ø—Ä–∏–Ω–∞–¥–ª.\",\"–°—Ç–µ–ø.–Ω–µ–æ–ø—Ä–µ–¥.\"\n"
                "\"–û—á–µ–Ω—å –≤–∞–∂–Ω–æ, –∏ —è —É–≤–µ—Ä–µ–Ω(a)\",\"0.9\",\"0.05\",\"0.05\"\n"
            ),
            width=380,
            font=("Segoe UI", 8),
            justify="left"
        )
        msg_ifs_scale.pack(pady=(10, 5))
        ttk.Button(right, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª Intuitionistic", command=self.load_intuitionistic_file).pack(pady=5)
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∫–∞–ª—ã
        ttk.Button(left, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —à–∫–∞–ª—É –∑–Ω–∞—á–µ–Ω–∏–π", command=self.load_fuzzy_scale_file).pack(pady=(10, 5))
        ttk.Button(right, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —à–∫–∞–ª—É IFS", command=self.load_ifs_scale_file).pack(pady=(10, 5))
        # –ö–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞

        self.status = ttk.Label(frame, text="", style="Status.TLabel")
        self.status.pack()

        ttk.Button(frame, text="‚úÖ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç", command=self.run_fuzzy_topsis).pack(pady=(15, 5))
        ttk.Button(frame, text="üîô –ù–∞–∑–∞–¥", command=self.show_method_selection_screen).pack(pady=(0, 10))



    def load_fuzzy_type1_file(self):
        path = filedialog.askopenfilename(
            title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è Fuzzy TOPSIS Type-1",
            filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")]
        )
        if path:
            self.fuzzy_type1_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª Type-1: " + os.path.basename(path))

    def load_ifs_scale_file(self):
        path = filedialog.askopenfilename(
            title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —à–∫–∞–ª—É –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è Intuitionistic Fuzzy TOPSIS",
            filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")]
        )
        if path:
            self.ifs_scale_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —à–∫–∞–ª–∞ IFS: " + os.path.basename(path))

    def load_intuitionistic_file(self):
        path = filedialog.askopenfilename(
            title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è Intuitionistic TOPSIS",
            filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")]
        )
        if path:
            self.topsis_intuitionistic_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª Intuitionistic: " + os.path.basename(path))
    def load_fuzzy_scale_file(self):
        path = filedialog.askopenfilename(
            title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —à–∫–∞–ª—ã –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è Fuzzy TOPSIS",
            filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")]
        )
        if path:
            self.fuzzy_scale_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —à–∫–∞–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–π: " + os.path.basename(path))

    def run_fuzzy_topsis(self):
        if not self.fuzzy_type1_path or not hasattr(self, 'fuzzy_scale_path'):
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è Fuzzy TOPSIS")
            return

        if not self.topsis_intuitionistic_path or not hasattr(self, 'ifs_scale_path'):
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è Intuitionistic TOPSIS")
            return

        try:
            from logic.fuzzy_topsis import calculate_fuzzy_topsis
            from logic.intuitionistic_topsis import calculate_ifs_topsis
            from logic.fuzzy_topsis_report import generate_combined_report

            results_type1 = calculate_fuzzy_topsis(self.fuzzy_type1_path, self.fuzzy_scale_path)
            results_ifs = calculate_ifs_topsis(self.topsis_intuitionistic_path, self.ifs_scale_path)

            generate_combined_report(
                fuzzy_results=results_type1,  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                ifs_results=results_ifs
            )

            self.status.config(text="üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: output/fuzzy_topsis_report.pdf")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {str(e)}")


    def show_fuzzy_delphi_screen(self):
        self.clear_window()
        frame = ttk.Frame(self.root, padding=20)
        frame.pack(fill="both", expand=True)

        ttk.Label(frame, text="–ú–µ—Ç–æ–¥ –Ω–µ—á–µ—Ç–∫–æ–≥–æ –î–µ–ª—Ñ–∏ (Fuzzy Delphi)", style="Header.TLabel").pack(pady=(0, 10))

        container = ttk.Frame(frame)
        container.pack(fill="both", expand=True)

        # –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî Fuzzy Delphi Type-2
        left = ttk.Frame(container, padding=10)
        left.pack(side="left", fill="both", expand=True)

        ttk.Label(left, text="Fuzzy Delphi Type-2 (IT2FS)", style="SubHeader.TLabel").pack(pady=(0, 5))

        msg1 = tk.Message(
            left,
            text=("–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–æ–≤–µ—Å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ç–µ–ø–µ–Ω–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏:\n"
        "  - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞\n"
        "  - –≠–∫—Å–ø–µ—Ä—Ç\n"
        "  - –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –£–¥–æ–±—Å—Ç–≤–æ)\n"
        "  - –í–µ—Å —ç–∫—Å–ø–µ—Ä—Ç–∞\n\n"
        "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
        "–ó–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–æ –≤ –∫–∞–≤—ã—á–∫–∏.\n"
        "–û—Ü–µ–Ω–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \"–°—Ç–µ–ø–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äì –õ–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞\"\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: \"–í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äì –í—ã—Å–æ–∫–∞—è\"\n\n"
        "–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏:\n"
        "\"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ—Ü—Å–µ—Ç–∏\",\"–≠–∫—Å–ø–µ—Ä—Ç 1\",\"–í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äì –í—ã—Å–æ–∫–∞—è\",\"–°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äì –°—Ä–µ–¥–Ω—è—è\",\"–ù–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äì –ù–∏–∑–∫–∞—è\",\"0.6\""
     ),
            width=380,
            justify="left"
        )
        msg1.pack(pady=(0, 5))
        ttk.Button(left, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª Type-2", command=self.load_fuzzy_delphi_file).pack(pady=5)

        # –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî Delphi Intuitionistic
        right = ttk.Frame(container, padding=10)
        right.pack(side="left", fill="both", expand=True)

        ttk.Label(right, text="Delphi Intuitionistic (IFS)", style="SubHeader.TLabel").pack(pady=(0, 5))

        msg2 = tk.Message(
            right,
            text=(
                "–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ü–µ–Ω–∫–∏ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –≤ –≤–∏–¥–µ —Ç—Ä–æ–µ–∫ (Œº, ŒΩ, œÄ):\n"
        "  - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞\n"
        "  - –≠–∫—Å–ø–µ—Ä—Ç\n"
        "  - –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –£–¥–æ–±—Å—Ç–≤–æ)\n"
        "  - –í–µ—Å —ç–∫—Å–ø–µ—Ä—Ç–∞\n\n"
        "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è.\n"
        "–ó–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–æ –≤ –∫–∞–≤—ã—á–∫–∏.\n"
        "–û—Ü–µ–Ω–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \"(Œº, ŒΩ, œÄ)\", –≥–¥–µ –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0 –¥–æ 1.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: \"(0.7, 0.2, 0.1)\"\n\n"
        "–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏:\n"
        "\"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ—Ü—Å–µ—Ç–∏\",\"–≠–∫—Å–ø–µ—Ä—Ç 1\",\"(0.7, 0.2, 0.1)\",\"(0.6, 0.3, 0.1)\",\"(0.5, 0.4, 0.1)\",\"0.6\""
    ),
            width=380,
            justify="left"
        )
        msg2.pack(pady=(0, 5))
        ttk.Button(right, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª IFS", command=self.load_delphi_ifs_file).pack(pady=5)

        # –ö–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
        ttk.Button(frame, text="‚úÖ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç", command=self.run_fuzzy_delphi).pack(pady=(15, 5))
        ttk.Button(frame, text="üîô –ù–∞–∑–∞–¥", command=self.show_method_selection_screen).pack(pady=(0, 10))

        self.status = ttk.Label(frame, text="", style="Status.TLabel")
        self.status.pack()

    def load_fuzzy_delphi_file(self):
        path = filedialog.askopenfilename(title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Fuzzy Delphi Type-2",
                                          filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.fuzzy_delphi_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª Type-2: " + os.path.basename(path))

    def load_delphi_ifs_file(self):
        path = filedialog.askopenfilename(title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Delphi Intuitionistic",
                                          filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.delphi_ifs_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª IFS: " + os.path.basename(path))

    def run_fuzzy_delphi(self):
        if not self.fuzzy_delphi_path or not self.delphi_ifs_path:
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–∞ CSV-—Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–∞.")
            return

        try:
            from logic import fuzzy_delphi, delphi_report

            results_type2 = fuzzy_delphi.process_fuzzy_delphi(self.fuzzy_delphi_path)
            results_ifs = fuzzy_delphi.process_delphi_ifs(self.delphi_ifs_path)

            delphi_report.generate_combined_report(results_type2, results_ifs)
            self.status.config(text="üìÑ –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: output/fuzzy_delphi_report.pdf")

        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))


    def show_fuzzy_ahp_screen(self):
        self.clear_window()
        frame = ttk.Frame(self.root, padding=20)
        frame.pack(fill="both", expand=True)

        ttk.Label(frame, text="–ù–µ—á–µ—Ç–∫–∞—è –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (Fuzzy AHP)", style="Header.TLabel").pack(pady=(0, 10))

        container = ttk.Frame(frame)
        container.pack(fill="both", expand=True)

        # –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî Fuzzy AHP Type-1
        left = ttk.Frame(container, padding=10)
        left.pack(side="left", fill="both", expand=True)

        ttk.Label(left, text="Fuzzy AHP Type-1", style="SubHeader.TLabel").pack(pady=(0, 5))

        msg1 = tk.Message(
            left,
            text=(

        "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –≤–∏–¥–µ —Ç—Ä—ë—Ö –æ—Ç–¥–µ–ª—å–Ω—ã—Ö CSV-—Ñ–∞–π–ª–æ–≤:\n"
        "1. –û—Ü–µ–Ω–∫–∏ –ø–æ–ø–∞—Ä–Ω—ã—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:\n"
        "  - –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ (–∑–∞–≥–æ–ª–æ–≤–∫–∏)\n"
        "  - –ö–∞–∂–¥–∞—è –ø–æ—Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –æ—Ü–µ–Ω–∫–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –æ–¥–Ω–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏\n"
        "  - –ó–Ω–∞—á–µ–Ω–∏—è ‚Äî –≤ —Ñ–æ—Ä–º–∞—Ç–µ \"3\" –∏–ª–∏ \"1/3\" –∏–∑ —à–∫–∞–ª—ã \"1\", \"2\", \"3\", \"5\", \"7\", \"9\", \"1/2\", \"1/3\", \"1/5\", \"1/7\", \"1/9\"\n"
        "2. –û—Ü–µ–Ω–∫–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:\n"
        "  - –°—Ç–æ–ª–±—Ü—ã: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞, –≠–∫—Å–ø–µ—Ä—Ç, –ö—Ä–∏—Ç–µ—Ä–∏–π 1, –ö—Ä–∏—Ç–µ—Ä–∏–π 2, ...\n"
        "  - –ó–Ω–∞—á–µ–Ω–∏—è ‚Äî —Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∞ (a, b, c), –Ω–∞–ø—Ä–∏–º–µ—Ä: \"(1.5, 2.0, 2.5)\"\n"
        "3. –í–µ—Å–æ–≤—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤:\n"
        "  - –î–≤–∞ —Å—Ç–æ–ª–±—Ü–∞: –≠–∫—Å–ø–µ—Ä—Ç, –í–µ—Å\n"
        "  - –í–µ—Å ‚Äî —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1, —Å—É–º–º–∞ –≤—Å–µ—Ö –≤–µ—Å–æ–≤ –¥–æ–ª–∂–Ω–∞ —Ä–∞–≤–Ω—è—Ç—å—Å—è 1.0\n"
        "–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–≤—ã—á–∫–∞—Ö, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è. –ó–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–æ –≤ –∫–∞–≤—ã—á–∫–∏."

            ),
            width=420,
            justify="left"
        )
        msg1.pack(pady=(0, 5))

        ttk.Button(left, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏", command=self.load_fuzzy_ahp_criteria_file).pack(pady=3)
        ttk.Button(left, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã", command=self.load_fuzzy_ahp_alternatives_file).pack(pady=3)
        ttk.Button(left, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–µ—Å–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤", command=self.load_fuzzy_ahp_weights_file).pack(pady=3)

        # –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî Fuzzy AHP Type-2
        right = ttk.Frame(container, padding=10)
        right.pack(side="left", fill="both", expand=True)

        ttk.Label(right, text="Fuzzy AHP Type-2", style="SubHeader.TLabel").pack(pady=(0, 5))

        msg2 = tk.Message(
            right,
            text=(
        "–§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (CSV): –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ü–µ–Ω–∫–∏ –ø–æ–ø–∞—Ä–Ω—ã—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤:\n"
        "  - –°—Ç–æ–ª–±—Ü—ã: –≠–∫—Å–ø–µ—Ä—Ç, –í–µ—Å, –ö—Ä–∏—Ç–µ—Ä–∏–π 1 > –ö—Ä–∏—Ç–µ—Ä–∏–π 2, –ö—Ä–∏—Ç–µ—Ä–∏–π 1 > –ö—Ä–∏—Ç–µ—Ä–∏–π 3, ...\n"
        "  - –ó–Ω–∞—á–µ–Ω–∏—è ‚Äî —Å–ª–æ–≤–µ—Å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: \"–û–¥–∏–Ω–∞–∫–æ–≤–æ\", \"–°–ª–∞–±–æ\", \"–£–º–µ—Ä–µ–Ω–Ω–æ\", \"–°–∏–ª—å–Ω–æ\", \"–ê–±—Å–æ–ª—é—Ç–Ω–æ\"\n"
        "  - –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –∫–∞–≤—ã—á–∫–∏\n\n"
        "–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏:\n"
        "  \"–≠–∫—Å–ø–µ—Ä—Ç 1\",\"0.3\",\"–°–ª–∞–±–æ\",\"–û–¥–∏–Ω–∞–∫–æ–≤–æ\",\"–°–∏–ª—å–Ω–æ\",... \n"
    ),
            width=380,
            justify="left"
        )
        msg2.pack(pady=(0, 5))

        ttk.Button(right, text="üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª Type-2", command=self.load_fuzzy_ahp_type2_file).pack(pady=5)

        # –ö–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
        ttk.Button(frame, text="‚úÖ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç", command=self.run_fuzzy_ahp).pack(pady=(15, 5))
        ttk.Button(frame, text="üîô –ù–∞–∑–∞–¥", command=self.show_method_selection_screen).pack(pady=(0, 10))

        self.status = ttk.Label(frame, text="", style="Status.TLabel")
        self.status.pack()

    def load_fuzzy_ahp_criteria_file(self):
        path = filedialog.askopenfilename(
            title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –º–∞—Ç—Ä–∏—Ü–µ–π –ø–æ–ø–∞—Ä–Ω—ã—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ (Fuzzy AHP Type-1)",
            filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.ahp_type1_criteria_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤: " + os.path.basename(path))

    def load_fuzzy_ahp_alternatives_file(self):
        path = filedialog.askopenfilename(title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –æ—Ü–µ–Ω–∫–∞–º–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ (Fuzzy AHP Type-1)",
                                          filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.ahp_type1_alternatives_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤: " + os.path.basename(path))

    def load_fuzzy_ahp_weights_file(self):
        path = filedialog.askopenfilename(title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –≤–µ—Å–∞–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ (Fuzzy AHP Type-1)",
                                          filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.ahp_type1_weights_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –≤–µ—Å–æ–≤: " + os.path.basename(path))

    def load_fuzzy_ahp_type2_file(self):
        path = filedialog.askopenfilename(title="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –ø–æ–ø–∞—Ä–Ω—ã—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ (Fuzzy AHP Type-2)",
                                          filetypes=[("CSV —Ñ–∞–π–ª—ã", "*.csv")])
        if path:
            self.ahp_type2_path = path
            self.status.config(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª Type-2: " + os.path.basename(path))

    def run_fuzzy_ahp(self):
        if not self.ahp_type1_criteria_path or not self.ahp_type1_alternatives_path or not self.ahp_type1_weights_path or not self.ahp_type2_path:
            messagebox.showwarning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —á–µ—Ç—ã—Ä–µ —Ñ–∞–π–ª–∞: —Ç—Ä–∏ –¥–ª—è Type-1 –∏ –æ–¥–∏–Ω –¥–ª—è Type-2.")
            return

        try:
            from logic import fuzzy_ahp, fuzzy_ahp_report

            # –ü–µ—Ä–µ–¥–∞—ë–º –≤—Å–µ —Ç—Ä–∏ –ø—É—Ç–∏ –¥–ª—è Type-1
            results_type1 = fuzzy_ahp.process_fuzzy_ahp_type1(
                criteria_path=self.ahp_type1_criteria_path,
                alternatives_path=self.ahp_type1_alternatives_path,
                weights_path=self.ahp_type1_weights_path
            )

            # –û–¥–∏–Ω –ø—É—Ç—å –¥–ª—è Type-2
            results_type2 = fuzzy_ahp.process_fuzzy_ahp_type2(self.ahp_type2_path)

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –µ–¥–∏–Ω—ã–π –æ—Ç—á—ë—Ç
            fuzzy_ahp_report.generate_report(results_type1, results_type2)

            self.status.config(text="üìÑ –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: output/fuzzy_ahp_report.pdf")

        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))


if __name__ == "__main__":
    root = tk.Tk()
    app = PrioritizationTool(root)
    root.mainloop()
